<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.sagu.mapper.ChatDeclarationMapper">
	<insert id="insertDeclaration" parameterType="boot.sagu.dto.ChatDeclarationDto" useGeneratedKeys="true" keyProperty="declaration_id">
		insert into chatdeclaration (
			declaration_chat_room_id,
			declaration_memberid,
			declaration_opposite_memberid,
			declaration_type,
			declaration_content,
			declaration_time
		) values (
			#{declaration_chat_room_id},
			#{declaration_memberid},
			#{declaration_opposite_memberid},
			#{declaration_type},
			#{declaration_content},
			now()
		)
	</insert>
	
	 <select id="getChatDeclarationsForMember" resultType="boot.sagu.dto.ChatDeclarationDto" parameterType="long">
        SELECT
          declaration_id AS declarationId,
        declaration_chat_room_id AS declarationChatRoomId,
        declaration_memberid AS declarationMemberId,
        declaration_opposite_memberid AS declarationOppositeMemberId,
        declaration_type AS declarationType,
        declaration_content AS reportedChatContent,
        declaration_time AS createdAt,
        is_read AS isRead
        FROM chatdeclaration
        WHERE declaration_opposite_memberid = #{memberId}
        ORDER BY declaration_time DESC
    </select>
    
    <select id="getAllDeclarations" resultType="boot.sagu.dto.ChatDeclarationDto">
    	select * from chatdeclaration order by declaration_id desc
    </select>
    
    <select id="countDeclarations" resultType="int">
    	select count(*) from chatdeclaration
    </select>
    
</mapper>